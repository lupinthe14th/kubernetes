---
# FROM URL: https://vadosware.io/post/yet-another-cluster-reinstall-back-to-container-linux/
# This config is meant to be consumed by the config transpiler, which will
# generate the corresponding Ignition config. Do not pass this config directly
# to instances of Container Linux.

# NOTE: This configuration is meant to work with Config Transpiler v0.9.0
# The spec is available at (https://github.com/coreos/container-linux-config-transpiler/blob/v0.9.0/doc/configuration.md)

passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBAA/oRvl4sckPze1ahsmiY05k5nL7cctw5e3O6jLM1o8s2z0GpzZ8iamIEalw61UHDLBDm+Syn7tAtIasYSMShFqSQEWV5Ekgk+psQcuGFJkXYGWyfGGb5pLvRX9LwONpEgAnoSpXen66kG0t6q+1wCApnqmETnhwzBzzw0Vg0dBpnXJrg==

systemd:
  units:
    - name: docker.service
      enabled: true

    - name: k8s-install.service
      enabled: true
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=k8s installation script
        Wants=network-online.target
        After=network.target network-online.target

        [Service]
        Type=oneshot
        ExecStart=/ignition/init/k8s/install.sh

    - name: kubeadm-install.service
      enabled: true
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=kubeadm installation script

        [Service]
        Type=oneshot
        Environment="PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/opt/bin"
        ExecStart=/ignition/init/kubeadm/kubeadm-install.sh

    - name: k8s-setup.service
      enabled: true
      contents: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=kubernetes setup script
        Requires=kubeadm-install.service
        After=kubeadm-install.service

        [Service]
        Type=oneshot
        User=core
        Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/bin"
        ExecStart=/ignition/init/k8s/setup.sh

storage:
  filesystems:
    - mount:
        device: /dev/disk/by-label/ROOT
        format: xfs
        wipe_filesystem: true
        label: ROOT

  files:
    - path: /opt/bin/kubeadm
      filesystem: root
      # 0755
      mode: 493
      contents:
        remote:
          url: https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/arm64/kubeadm
          verification:
            hash:
              function: sha512
              sum: f4c393e0cce39beca4f44e06fd6ebf4a41b708ba5fc01faa2109fbd93c2c56a4545415be30e9a9757269887ae52c579a4d49b35ae6bc86d167e1bccb165682e1

    - path: /opt/bin/kubelet
      filesystem: root
      # 0755
      mode: 493
      contents:
        remote:
          url: https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/arm64/kubelet
          verification:
            hash:
              function: sha512
              sum: c9304813054b1925ff6db653abd46e01d79e70c377ab874f9c3e0cab4476826ea58f549cfb164535df11b958522677b8b645faa9bc17710c94feb57f02019593

    - path: /opt/bin/kubectl
      filesystem: root
      # 0777
      mode: 511
      contents:
        remote:
          url: https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/arm64/kubectl
          verification:
            hash:
              function: sha512
              sum: 45f0825b88ef21ff94a9f04b767ee3c2cb8792f8164525f18603f7ab304903fd151501b4b646578dc5088df31a10ee9d41959402351dfeb2f8652afeccee5516

    - path: /etc/systemd/system/kubelet.service
      filesystem: root
      # 0644
      mode: 420
      contents:
        remote:
          url: https://raw.githubusercontent.com/kubernetes/kubernetes/v1.15.3/build/debs/kubelet.service

    - path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      # 0644
      filesystem: root
      mode: 420
      contents:
        remote:
          url: https://raw.githubusercontent.com/kubernetes/kubernetes/v1.15.3/build/debs/10-kubeadm.conf

    - path: /ignition/init/canal/canal.yaml
      filesystem: root
      # 0755
      mode: 493
      contents:
        remote:
          url: https://docs.projectcalico.org/v3.8/manifests/canal.yaml

    - path: /ignition/init/k8s/install.sh
      filesystem: root
      # 740
      mode: 480
      contents:
        inline: |
          #!/bin/bash

          # Unzip the kubernetes binaries if not already present
          test -d /opt/bin/kubeadm && echo "k8s binaries (kubeadm) already installed" && exit 0

          # NOTE: If RELEASE is updated, the SHA512 SUMs will need to be as well
          echo -e "=> Installing k8s v1.15.3"

          echo "=> Cusomizing kubelet.service..."
          sed -i "s:/usr/bin:/opt/bin:g" /etc/systemd/system/kubelet.service
          sed -i "s:/usr/bin:/opt/bin:g" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

          systemctl daemon-reload
          systemctl enable kubelet
          systemctl start kubelet

    - filesystem: root
      path: /ignition/init/kubeadm/kubeadm-install.sh
      # 740
      mode: 480
      contents:
        inline: |
          #!/bin/bash

          # Ensure kubeadm binary is present
          test -f /opt/bin/kubeadm || (echo "Failed to find kubeadm binary" && exit 1)

          # Exit if kubeadm has already been run (/etc/kubernetes folder would have been created)
          test -d /etc/kubernetes && echo "/etc/kubernetes is present, kubeadm should have already been run once" && exit 0

          echo "=> Running kubeadm init..."
          /opt/bin/kubeadm init --cri-socket "/var/run/docker.sock" --pod-network-cidr "10.244.0.0/16"

          echo "=> Running kubeadm post-install set up for user 'core'"
          mkdir -p /home/core/.kube
          cp -i /etc/kubernetes/admin.conf /home/core/.kube/config
          chown $(id -u core):$(id -g core) /home/core/.kube/config

    - filesystem: root
      path: /ignition/init/k8s/setup.sh
      # 0755
      mode: 493
      contents:
        inline: |
          #!/bin/bash

          # Ensure /etc/kubernetes is present (created by kubeadm)
          test -d /etc/kubernetes || (echo "/etc/kubernetes not present, ensure kubeadm has run properly" && exit 1)

          echo "=> Enabling workload running on the master node"
          kubectl taint nodes --all node-role.kubernetes.io/master-

          echo "=> Installing Kubernetes API datastore with flannel networking"
          kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/rbac/rbac-kdd-flannel.yaml

          # NOTE: If you are using pod CIDR 10.244.0.0/16, skip to the next
          #       step. If you are using a different pod CIDR, use the following
          #       commands to set an environment variable called POD_CIDR
          #       containing your pod CIDR and replace 10.244.0.0/16 in the
          #       manifest with your pod CIDR.
          #echo "=> Cusomizing kubelet.service..."
          #POD_CIDR="10.244.0.0/16" \
          #sed -i -e "s?10.244.0.0/16?$POD_CIDR?g" \
          #          /ignition/init/canal/canal.yaml
          echo "=> Installing with the Kubernetes API datastore"
          kubectl apply -f /ignition/init/canal/canal.yaml

    - path: /etc/ssh/sshd_config
      filesystem: root
      mode: 0600
      contents:
        inline: |
          # Use most defaults for sshd configuration.
          UsePrivilegeSeparation sandbox
          Subsystem sftp internal-sftp
          UseDNS no

          PasswordAuthentication no
          PermitRootLogin no
          AllowUsers core
          AuthenticationMethods publickey
